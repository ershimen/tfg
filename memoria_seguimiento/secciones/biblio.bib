@online{recomendaciones,
  author = {ETSIINF},
  title = {Recomendaciones sobre el contenido de la Memoria Final},
  year = {2017},
  url = {http://www.fi.upm.es/?pagina=1475},
  urldate = {2017-01-01}
}

@book{stallings2006,
  title =        {Computer Organization and Architecture},
  author =       {William Stallings},
  year =         2006,
  publisher =    {Prentice Hall}
}

@article{MOSES200497,
	title = {Algorithm visualization for distributed environments},
	journal = {Journal of Visual Languages and Computing},
	volume = {15},
	number = {1},
	pages = {97-123},
	year = {2004},
	issn = {1045-926X},
	doi = {https://doi.org/10.1016/j.jvlc.2003.07.001},
	url = {https://www.sciencedirect.com/science/article/pii/S1045926X03000569},
	author = {Yoram Moses and Zvi Polunsky and Ayellet Tal and Leonid Ulitsky},
	keywords = {Algorithm visualization, Algorithm animation, Distributed algorithms},
	abstract = {This paper investigates the visualization of distributed algorithms. We present a conceptual model and a system, VADE, that realizes this model. Since in asynchronous distributed systems there is no way of knowing (let alone, visualizing) the “real” execution, we show how to generate a visualization which is consistent with the execution of the distributed algorithm. We also present the design and implementation of our system. VADE is designed so that the algorithm runs on the server's machines while the visualization is executed on a web page on the client's machine. Programmers can write animations quickly and easily with the assistance of VADE's libraries. End-users can experiment with the animation and change its visual properties.}
}

@inproceedings{10.5555/2643634.2643666,
	author = {Ongaro, Diego and Ousterhout, John},
	title = {In Search of an Understandable Consensus Algorithm},
	year = {2014},
	isbn = {9781931971102},
	publisher = {USENIX Association},
	address = {USA},
	abstract = {Raft is a consensus algorithm for managing a replicated log. It produces a result equivalent to (multi-)Paxos, and it is as efficient as Paxos, but its structure is different from Paxos; this makes Raft more understandable than Paxos and also provides a better foundation for building practical systems. In order to enhance understandability, Raft separates the key elements of consensus, such as leader election, log replication, and safety, and it enforces a stronger degree of coherency to reduce the number of states that must be considered. Results from a user study demonstrate that Raft is easier for students to learn than Paxos. Raft also includes a new mechanism for changing the cluster membership, which uses overlapping majorities to guarantee safety.},
	booktitle = {Proceedings of the 2014 USENIX Conference on USENIX Annual Technical Conference},
	pages = {305–320},
	numpages = {16},
	location = {Philadelphia, PA},
	series = {USENIX ATC'14}
}


@online{raft1,
  author = {Ongaro, Diego},
  title = {The Raft Consensus Algorithm},
  url = {https://raft.github.io/},
  urldate = {2022-04-24}
}

@online{raft2,
  author = {Johnson, Ben},
  title = {Raft - Understandable Distributed Consensus},
  url = {http://thesecretlivesofdata.com/raft/},
  urldate = {2022-04-24}
}

@online{raft3,
  author = {Martin, Joel},
  title = {Raft Distributed Consensus Algorithm Visualization},
  url = {http://kanaka.github.io/raft.js/},
  urldate = {2022-04-24}
}
